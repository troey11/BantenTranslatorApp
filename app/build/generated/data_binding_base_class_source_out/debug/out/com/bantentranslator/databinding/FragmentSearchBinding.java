// Generated by view binder compiler. Do not edit!
package com.bantentranslator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bantentranslator.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnClear;

  @NonNull
  public final MaterialButton btnSearch;

  @NonNull
  public final TextInputEditText etLimit;

  @NonNull
  public final TextInputEditText etSearch;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewResults;

  @NonNull
  public final TextView tvNoResults;

  @NonNull
  public final TextView tvResultCount;

  private FragmentSearchBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton btnClear,
      @NonNull MaterialButton btnSearch, @NonNull TextInputEditText etLimit,
      @NonNull TextInputEditText etSearch, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerViewResults, @NonNull TextView tvNoResults,
      @NonNull TextView tvResultCount) {
    this.rootView = rootView;
    this.btnClear = btnClear;
    this.btnSearch = btnSearch;
    this.etLimit = etLimit;
    this.etSearch = etSearch;
    this.progressBar = progressBar;
    this.recyclerViewResults = recyclerViewResults;
    this.tvNoResults = tvNoResults;
    this.tvResultCount = tvResultCount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_clear;
      MaterialButton btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btn_search;
      MaterialButton btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.et_limit;
      TextInputEditText etLimit = ViewBindings.findChildViewById(rootView, id);
      if (etLimit == null) {
        break missingId;
      }

      id = R.id.et_search;
      TextInputEditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recycler_view_results;
      RecyclerView recyclerViewResults = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewResults == null) {
        break missingId;
      }

      id = R.id.tv_no_results;
      TextView tvNoResults = ViewBindings.findChildViewById(rootView, id);
      if (tvNoResults == null) {
        break missingId;
      }

      id = R.id.tv_result_count;
      TextView tvResultCount = ViewBindings.findChildViewById(rootView, id);
      if (tvResultCount == null) {
        break missingId;
      }

      return new FragmentSearchBinding((LinearLayout) rootView, btnClear, btnSearch, etLimit,
          etSearch, progressBar, recyclerViewResults, tvNoResults, tvResultCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
